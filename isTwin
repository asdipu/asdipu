//Consider the prime number 11. Note that 13 is also a prime and 13 â€“ 11 = 2.
    public static int isNice(int[] arr){
	    boolean[] primes = new boolean[arr.length];
         for (int i = 0; i < arr.length; i++) {
         if (isPrime(arr[i])) {
            primes[i] = true;
        }
    }
    for (int i = 0; i < arr.length; i++) {
        if (primes[i]) {
            int twinPrime1 = arr[i] + 2;
            int twinPrime2 = arr[i] - 2;
            boolean foundTwin = false;
            for (int j = 0; j < arr.length; j++) {
                if (arr[j] == twinPrime1 || arr[j] == twinPrime2) {
                    foundTwin = true;
                    break;
                }
            }
            if (!foundTwin) {
                return 0;
            }
        }
    }
    return 1;
	}
    public static int isPrime(int n){
        if(n<=1) return 0;
        for(int i=2;i*i<=n;i++){
            if(n%i==0){
                return 0;
            }
        }
        return 1;
    }
